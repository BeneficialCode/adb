// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ApkEntry.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ApkEntry_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ApkEntry_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ApkEntry_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ApkEntry_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ApkEntry_2eproto;
namespace com {
namespace android {
namespace fastdeploy {
class APKDump;
struct APKDumpDefaultTypeInternal;
extern APKDumpDefaultTypeInternal _APKDump_default_instance_;
class APKEntry;
struct APKEntryDefaultTypeInternal;
extern APKEntryDefaultTypeInternal _APKEntry_default_instance_;
class APKMetaData;
struct APKMetaDataDefaultTypeInternal;
extern APKMetaDataDefaultTypeInternal _APKMetaData_default_instance_;
}  // namespace fastdeploy
}  // namespace android
}  // namespace com
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace com {
namespace android {
namespace fastdeploy {

// ===================================================================


// -------------------------------------------------------------------

class APKEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.android.fastdeploy.APKEntry) */ {
 public:
  inline APKEntry() : APKEntry(nullptr) {}
  ~APKEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR APKEntry(::google::protobuf::internal::ConstantInitialized);

  inline APKEntry(const APKEntry& from)
      : APKEntry(nullptr, from) {}
  APKEntry(APKEntry&& from) noexcept
    : APKEntry() {
    *this = ::std::move(from);
  }

  inline APKEntry& operator=(const APKEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline APKEntry& operator=(APKEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const APKEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const APKEntry* internal_default_instance() {
    return reinterpret_cast<const APKEntry*>(
               &_APKEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(APKEntry& a, APKEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(APKEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(APKEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  APKEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<APKEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const APKEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const APKEntry& from) {
    APKEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(APKEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "com.android.fastdeploy.APKEntry";
  }
  protected:
  explicit APKEntry(::google::protobuf::Arena* arena);
  APKEntry(::google::protobuf::Arena* arena, const APKEntry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMd5FieldNumber = 1,
    kDataOffsetFieldNumber = 2,
    kDataSizeFieldNumber = 3,
  };
  // bytes md5 = 1;
  void clear_md5() ;
  const std::string& md5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_md5(Arg_&& arg, Args_... args);
  std::string* mutable_md5();
  PROTOBUF_NODISCARD std::string* release_md5();
  void set_allocated_md5(std::string* value);

  private:
  const std::string& _internal_md5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_md5(
      const std::string& value);
  std::string* _internal_mutable_md5();

  public:
  // int64 dataOffset = 2;
  void clear_dataoffset() ;
  ::int64_t dataoffset() const;
  void set_dataoffset(::int64_t value);

  private:
  ::int64_t _internal_dataoffset() const;
  void _internal_set_dataoffset(::int64_t value);

  public:
  // int64 dataSize = 3;
  void clear_datasize() ;
  ::int64_t datasize() const;
  void set_datasize(::int64_t value);

  private:
  ::int64_t _internal_datasize() const;
  void _internal_set_datasize(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.android.fastdeploy.APKEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr md5_;
    ::int64_t dataoffset_;
    ::int64_t datasize_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ApkEntry_2eproto;
};// -------------------------------------------------------------------

class APKDump final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.android.fastdeploy.APKDump) */ {
 public:
  inline APKDump() : APKDump(nullptr) {}
  ~APKDump() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR APKDump(::google::protobuf::internal::ConstantInitialized);

  inline APKDump(const APKDump& from)
      : APKDump(nullptr, from) {}
  APKDump(APKDump&& from) noexcept
    : APKDump() {
    *this = ::std::move(from);
  }

  inline APKDump& operator=(const APKDump& from) {
    CopyFrom(from);
    return *this;
  }
  inline APKDump& operator=(APKDump&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const APKDump& default_instance() {
    return *internal_default_instance();
  }
  static inline const APKDump* internal_default_instance() {
    return reinterpret_cast<const APKDump*>(
               &_APKDump_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(APKDump& a, APKDump& b) {
    a.Swap(&b);
  }
  inline void Swap(APKDump* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(APKDump* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  APKDump* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<APKDump>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const APKDump& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const APKDump& from) {
    APKDump::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(APKDump* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "com.android.fastdeploy.APKDump";
  }
  protected:
  explicit APKDump(::google::protobuf::Arena* arena);
  APKDump(::google::protobuf::Arena* arena, const APKDump& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kCdFieldNumber = 2,
    kSignatureFieldNumber = 3,
    kAbsolutePathFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes cd = 2;
  void clear_cd() ;
  const std::string& cd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cd(Arg_&& arg, Args_... args);
  std::string* mutable_cd();
  PROTOBUF_NODISCARD std::string* release_cd();
  void set_allocated_cd(std::string* value);

  private:
  const std::string& _internal_cd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cd(
      const std::string& value);
  std::string* _internal_mutable_cd();

  public:
  // bytes signature = 3;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // string absolute_path = 4;
  void clear_absolute_path() ;
  const std::string& absolute_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_absolute_path(Arg_&& arg, Args_... args);
  std::string* mutable_absolute_path();
  PROTOBUF_NODISCARD std::string* release_absolute_path();
  void set_allocated_absolute_path(std::string* value);

  private:
  const std::string& _internal_absolute_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_absolute_path(
      const std::string& value);
  std::string* _internal_mutable_absolute_path();

  public:
  // @@protoc_insertion_point(class_scope:com.android.fastdeploy.APKDump)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr cd_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::google::protobuf::internal::ArenaStringPtr absolute_path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ApkEntry_2eproto;
};// -------------------------------------------------------------------

class APKMetaData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.android.fastdeploy.APKMetaData) */ {
 public:
  inline APKMetaData() : APKMetaData(nullptr) {}
  ~APKMetaData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR APKMetaData(::google::protobuf::internal::ConstantInitialized);

  inline APKMetaData(const APKMetaData& from)
      : APKMetaData(nullptr, from) {}
  APKMetaData(APKMetaData&& from) noexcept
    : APKMetaData() {
    *this = ::std::move(from);
  }

  inline APKMetaData& operator=(const APKMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  inline APKMetaData& operator=(APKMetaData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const APKMetaData& default_instance() {
    return *internal_default_instance();
  }
  static inline const APKMetaData* internal_default_instance() {
    return reinterpret_cast<const APKMetaData*>(
               &_APKMetaData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(APKMetaData& a, APKMetaData& b) {
    a.Swap(&b);
  }
  inline void Swap(APKMetaData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(APKMetaData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  APKMetaData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<APKMetaData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const APKMetaData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const APKMetaData& from) {
    APKMetaData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(APKMetaData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "com.android.fastdeploy.APKMetaData";
  }
  protected:
  explicit APKMetaData(::google::protobuf::Arena* arena);
  APKMetaData(::google::protobuf::Arena* arena, const APKMetaData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 2,
    kAbsolutePathFieldNumber = 1,
  };
  // repeated .com.android.fastdeploy.APKEntry entries = 2;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::com::android::fastdeploy::APKEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::com::android::fastdeploy::APKEntry >*
      mutable_entries();
  private:
  const ::google::protobuf::RepeatedPtrField<::com::android::fastdeploy::APKEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::com::android::fastdeploy::APKEntry>* _internal_mutable_entries();
  public:
  const ::com::android::fastdeploy::APKEntry& entries(int index) const;
  ::com::android::fastdeploy::APKEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::com::android::fastdeploy::APKEntry >&
      entries() const;
  // string absolute_path = 1;
  void clear_absolute_path() ;
  const std::string& absolute_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_absolute_path(Arg_&& arg, Args_... args);
  std::string* mutable_absolute_path();
  PROTOBUF_NODISCARD std::string* release_absolute_path();
  void set_allocated_absolute_path(std::string* value);

  private:
  const std::string& _internal_absolute_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_absolute_path(
      const std::string& value);
  std::string* _internal_mutable_absolute_path();

  public:
  // @@protoc_insertion_point(class_scope:com.android.fastdeploy.APKMetaData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::com::android::fastdeploy::APKEntry > entries_;
    ::google::protobuf::internal::ArenaStringPtr absolute_path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ApkEntry_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// APKDump

// string name = 1;
inline void APKDump::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& APKDump::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKDump.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void APKDump::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKDump.name)
}
inline std::string* APKDump::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKDump.name)
  return _s;
}
inline const std::string& APKDump::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void APKDump::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* APKDump::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* APKDump::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.android.fastdeploy.APKDump.name)
  return _impl_.name_.Release();
}
inline void APKDump::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.android.fastdeploy.APKDump.name)
}

// bytes cd = 2;
inline void APKDump::clear_cd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cd_.ClearToEmpty();
}
inline const std::string& APKDump::cd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKDump.cd)
  return _internal_cd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void APKDump::set_cd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cd_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKDump.cd)
}
inline std::string* APKDump::mutable_cd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cd();
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKDump.cd)
  return _s;
}
inline const std::string& APKDump::_internal_cd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cd_.Get();
}
inline void APKDump::_internal_set_cd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cd_.Set(value, GetArena());
}
inline std::string* APKDump::_internal_mutable_cd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cd_.Mutable( GetArena());
}
inline std::string* APKDump::release_cd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.android.fastdeploy.APKDump.cd)
  return _impl_.cd_.Release();
}
inline void APKDump::set_allocated_cd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cd_.IsDefault()) {
          _impl_.cd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.android.fastdeploy.APKDump.cd)
}

// bytes signature = 3;
inline void APKDump::clear_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& APKDump::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKDump.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void APKDump::set_signature(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKDump.signature)
}
inline std::string* APKDump::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKDump.signature)
  return _s;
}
inline const std::string& APKDump::_internal_signature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signature_.Get();
}
inline void APKDump::_internal_set_signature(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* APKDump::_internal_mutable_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* APKDump::release_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.android.fastdeploy.APKDump.signature)
  return _impl_.signature_.Release();
}
inline void APKDump::set_allocated_signature(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.android.fastdeploy.APKDump.signature)
}

// string absolute_path = 4;
inline void APKDump::clear_absolute_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.absolute_path_.ClearToEmpty();
}
inline const std::string& APKDump::absolute_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKDump.absolute_path)
  return _internal_absolute_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void APKDump::set_absolute_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.absolute_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKDump.absolute_path)
}
inline std::string* APKDump::mutable_absolute_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_absolute_path();
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKDump.absolute_path)
  return _s;
}
inline const std::string& APKDump::_internal_absolute_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.absolute_path_.Get();
}
inline void APKDump::_internal_set_absolute_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.absolute_path_.Set(value, GetArena());
}
inline std::string* APKDump::_internal_mutable_absolute_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.absolute_path_.Mutable( GetArena());
}
inline std::string* APKDump::release_absolute_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.android.fastdeploy.APKDump.absolute_path)
  return _impl_.absolute_path_.Release();
}
inline void APKDump::set_allocated_absolute_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.absolute_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.absolute_path_.IsDefault()) {
          _impl_.absolute_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.android.fastdeploy.APKDump.absolute_path)
}

// -------------------------------------------------------------------

// APKEntry

// bytes md5 = 1;
inline void APKEntry::clear_md5() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.md5_.ClearToEmpty();
}
inline const std::string& APKEntry::md5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKEntry.md5)
  return _internal_md5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void APKEntry::set_md5(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.md5_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKEntry.md5)
}
inline std::string* APKEntry::mutable_md5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_md5();
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKEntry.md5)
  return _s;
}
inline const std::string& APKEntry::_internal_md5() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.md5_.Get();
}
inline void APKEntry::_internal_set_md5(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.md5_.Set(value, GetArena());
}
inline std::string* APKEntry::_internal_mutable_md5() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.md5_.Mutable( GetArena());
}
inline std::string* APKEntry::release_md5() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.android.fastdeploy.APKEntry.md5)
  return _impl_.md5_.Release();
}
inline void APKEntry::set_allocated_md5(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.md5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.md5_.IsDefault()) {
          _impl_.md5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.android.fastdeploy.APKEntry.md5)
}

// int64 dataOffset = 2;
inline void APKEntry::clear_dataoffset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dataoffset_ = ::int64_t{0};
}
inline ::int64_t APKEntry::dataoffset() const {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKEntry.dataOffset)
  return _internal_dataoffset();
}
inline void APKEntry::set_dataoffset(::int64_t value) {
  _internal_set_dataoffset(value);
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKEntry.dataOffset)
}
inline ::int64_t APKEntry::_internal_dataoffset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dataoffset_;
}
inline void APKEntry::_internal_set_dataoffset(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dataoffset_ = value;
}

// int64 dataSize = 3;
inline void APKEntry::clear_datasize() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.datasize_ = ::int64_t{0};
}
inline ::int64_t APKEntry::datasize() const {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKEntry.dataSize)
  return _internal_datasize();
}
inline void APKEntry::set_datasize(::int64_t value) {
  _internal_set_datasize(value);
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKEntry.dataSize)
}
inline ::int64_t APKEntry::_internal_datasize() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.datasize_;
}
inline void APKEntry::_internal_set_datasize(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.datasize_ = value;
}

// -------------------------------------------------------------------

// APKMetaData

// string absolute_path = 1;
inline void APKMetaData::clear_absolute_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.absolute_path_.ClearToEmpty();
}
inline const std::string& APKMetaData::absolute_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKMetaData.absolute_path)
  return _internal_absolute_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void APKMetaData::set_absolute_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.absolute_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.android.fastdeploy.APKMetaData.absolute_path)
}
inline std::string* APKMetaData::mutable_absolute_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_absolute_path();
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKMetaData.absolute_path)
  return _s;
}
inline const std::string& APKMetaData::_internal_absolute_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.absolute_path_.Get();
}
inline void APKMetaData::_internal_set_absolute_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.absolute_path_.Set(value, GetArena());
}
inline std::string* APKMetaData::_internal_mutable_absolute_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.absolute_path_.Mutable( GetArena());
}
inline std::string* APKMetaData::release_absolute_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:com.android.fastdeploy.APKMetaData.absolute_path)
  return _impl_.absolute_path_.Release();
}
inline void APKMetaData::set_allocated_absolute_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.absolute_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.absolute_path_.IsDefault()) {
          _impl_.absolute_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.android.fastdeploy.APKMetaData.absolute_path)
}

// repeated .com.android.fastdeploy.APKEntry entries = 2;
inline int APKMetaData::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int APKMetaData::entries_size() const {
  return _internal_entries_size();
}
inline void APKMetaData::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::com::android::fastdeploy::APKEntry* APKMetaData::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.android.fastdeploy.APKMetaData.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::android::fastdeploy::APKEntry>* APKMetaData::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.android.fastdeploy.APKMetaData.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::com::android::fastdeploy::APKEntry& APKMetaData::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.android.fastdeploy.APKMetaData.entries)
  return _internal_entries().Get(index);
}
inline ::com::android::fastdeploy::APKEntry* APKMetaData::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::com::android::fastdeploy::APKEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:com.android.fastdeploy.APKMetaData.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::android::fastdeploy::APKEntry>& APKMetaData::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.android.fastdeploy.APKMetaData.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::com::android::fastdeploy::APKEntry>&
APKMetaData::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::com::android::fastdeploy::APKEntry>*
APKMetaData::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace fastdeploy
}  // namespace android
}  // namespace com


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ApkEntry_2eproto_2epb_2eh
