// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pairing.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_pairing_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_pairing_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_pairing_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_pairing_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_pairing_2eproto;
namespace adb {
namespace proto {
class PairingPacket;
struct PairingPacketDefaultTypeInternal;
extern PairingPacketDefaultTypeInternal _PairingPacket_default_instance_;
}  // namespace proto
}  // namespace adb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace adb {
namespace proto {
enum PairingPacket_Type : int {
  PairingPacket_Type_SPAKE2_MSG = 0,
  PairingPacket_Type_PEER_INFO = 1,
  PairingPacket_Type_PairingPacket_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PairingPacket_Type_PairingPacket_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PairingPacket_Type_IsValid(int value);
extern const uint32_t PairingPacket_Type_internal_data_[];
constexpr PairingPacket_Type PairingPacket_Type_Type_MIN = static_cast<PairingPacket_Type>(0);
constexpr PairingPacket_Type PairingPacket_Type_Type_MAX = static_cast<PairingPacket_Type>(1);
constexpr int PairingPacket_Type_Type_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PairingPacket_Type_descriptor();
template <typename T>
const std::string& PairingPacket_Type_Name(T value) {
  static_assert(std::is_same<T, PairingPacket_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return PairingPacket_Type_Name(static_cast<PairingPacket_Type>(value));
}
template <>
inline const std::string& PairingPacket_Type_Name(PairingPacket_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PairingPacket_Type_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PairingPacket_Type_Parse(absl::string_view name, PairingPacket_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PairingPacket_Type>(
      PairingPacket_Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PairingPacket final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:adb.proto.PairingPacket) */ {
 public:
  inline PairingPacket() : PairingPacket(nullptr) {}
  template<typename = void>
  explicit constexpr PairingPacket(::google::protobuf::internal::ConstantInitialized);

  inline PairingPacket(const PairingPacket& from)
      : PairingPacket(nullptr, from) {}
  PairingPacket(PairingPacket&& from) noexcept
    : PairingPacket() {
    *this = ::std::move(from);
  }

  inline PairingPacket& operator=(const PairingPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline PairingPacket& operator=(PairingPacket&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PairingPacket& default_instance() {
    return *internal_default_instance();
  }
  static inline const PairingPacket* internal_default_instance() {
    return reinterpret_cast<const PairingPacket*>(
               &_PairingPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PairingPacket& a, PairingPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(PairingPacket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PairingPacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PairingPacket* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PairingPacket>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PairingPacket& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PairingPacket& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "adb.proto.PairingPacket";
  }
  protected:
  explicit PairingPacket(::google::protobuf::Arena* arena);
  PairingPacket(::google::protobuf::Arena* arena, const PairingPacket& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Type = PairingPacket_Type;
  static constexpr Type SPAKE2_MSG = PairingPacket_Type_SPAKE2_MSG;
  static constexpr Type PEER_INFO = PairingPacket_Type_PEER_INFO;
  static inline bool Type_IsValid(int value) {
    return PairingPacket_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = PairingPacket_Type_Type_MIN;
  static constexpr Type Type_MAX = PairingPacket_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = PairingPacket_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return PairingPacket_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return PairingPacket_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return PairingPacket_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:adb.proto.PairingPacket)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
  };
  friend struct ::TableStruct_pairing_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PairingPacket

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace adb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::adb::proto::PairingPacket_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::adb::proto::PairingPacket_Type>() {
  return ::adb::proto::PairingPacket_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_pairing_2eproto_2epb_2eh
